"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
exports.__esModule = true;
var webpack_1 = require("webpack");
function webpack4(compiler) {
    // Webpack 4 does not have a method to handle interception of module
    // execution.
    // The closest thing we have to emulating this is mimicking the behavior of
    // `strictModuleExceptionHandling` in `MainTemplate`:
    // https://github.com/webpack/webpack/blob/4c644bf1f7cb067c748a52614500e0e2182b2700/lib/MainTemplate.js#L200
    compiler.hooks.compilation.tap('ReactFreshWebpackPlugin', function (compilation) {
        var hookRequire = compilation
            .mainTemplate.hooks.require;
        hookRequire.tap('ReactFreshWebpackPlugin', function (source, chunk, hash) {
            // Webpack 4 evaluates module code on the following line:
            // ```
            // modules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));
            // ```
            // https://github.com/webpack/webpack/blob/4c644bf1f7cb067c748a52614500e0e2182b2700/lib/MainTemplate.js#L200
            var lines = source.split('\n');
            var evalIndex = lines.findIndex(function (l) {
                return l.includes('modules[moduleId].call(');
            });
            // Unable to find the module execution, that's OK:
            if (evalIndex === -1) {
                return source;
            }
            return webpack_1.Template.asString(__spread(lines.slice(0, evalIndex), [
                "\n        var hasRefresh = !!self.$RefreshInterceptModuleExecution$;\n        var cleanup = hasRefresh\n          ? self.$RefreshInterceptModuleExecution$(moduleId)\n          : function() {};\n        try {\n        ",
                lines[evalIndex],
                "\n        } finally {\n          cleanup();\n        }\n        "
            ], lines.slice(evalIndex + 1)));
        });
    });
}
var ReactFreshWebpackPlugin = /** @class */ (function () {
    function ReactFreshWebpackPlugin() {
    }
    ReactFreshWebpackPlugin.prototype.apply = function (compiler) {
        var webpackMajorVersion = parseInt((webpack_1.version !== null && webpack_1.version !== void 0 ? webpack_1.version : ''), 10);
        switch (webpackMajorVersion) {
            case 4: {
                webpack4(compiler);
                break;
            }
            default: {
                throw new Error("ReactFreshWebpackPlugin does not support webpack v" + webpackMajorVersion + ".");
            }
        }
    };
    return ReactFreshWebpackPlugin;
}());
exports["default"] = ReactFreshWebpackPlugin;
