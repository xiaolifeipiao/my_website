{
  "request": {
    "httpVersion": "1.1",
    "headers": {
      "content-type": "multipart/form-data; boundary=--------------------------984507928091992447297388",
      "host": "localhost:1337",
      "connection": "close",
      "transfer-encoding": "chunked"
    },
    "trailers": {},
    "method": "POST",
    "url": "/css-validator/validator",
    "bodyEncoding": "utf8",
    "body": "----------------------------984507928091992447297388\r\nContent-Disposition: form-data; name=\"output\"\r\n\r\nsoap12\r\n----------------------------984507928091992447297388\r\nContent-Disposition: form-data; name=\"w3cUrl\"\r\n\r\nhttp://localhost:1337/css-validator/validator\r\n----------------------------984507928091992447297388\r\nContent-Disposition: form-data; name=\"highWaterMark\"\r\n\r\n1024000\r\n----------------------------984507928091992447297388\r\nContent-Disposition: form-data; name=\"text\"\r\n\r\n/*\nIcon classes can be used entirely standalone. They are named after their original file names.\n\nExample usage in HTML:\n\n`display: block` sprite:\n<div class=\"icon-home\"></div>\n\nTo change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:\n\n// CSS\n.icon {\n  display: inline-block;\n}\n\n// HTML\n<i class=\"icon icon-home\"></i>\n*/\n.hello > .icon-sprite-dash-case {\n  background-image: url(nested/dir/spritesheet.png);\n  background-position: 0px 0px;\n  width: 10px;\n  height: 20px;\n}\n.hello > .icon-sprite_snake_case {\n  background-image: url(nested/dir/spritesheet.png);\n  background-position: -10px -20px;\n  width: 20px;\n  height: 30px;\n}\n.hello > .icon-spriteCamelCase {\n  background-image: url(nested/dir/spritesheet.png);\n  background-position: -30px -50px;\n  width: 50px;\n  height: 50px;\n}\n\r\n----------------------------984507928091992447297388--"
  },
  "response": {
    "httpVersion": "1.1",
    "headers": {
      "cache-control": "no-cache",
      "connection": "close",
      "date": "Sat, 19 Mar 2016 23:28:44 GMT",
      "pragma": "no-cache",
      "transfer-encoding": "chunked",
      "content-language": "en",
      "content-type": "application/soap+xml;charset=utf-8",
      "server": "Jigsaw/2.3.0-beta3",
      "vary": "Accept-Language",
      "x-w3c-validator-errors": "0",
      "x-w3c-validator-status": "Valid"
    },
    "trailers": {},
    "statusCode": 200,
    "bodyEncoding": "utf8",
    "body": "<?xml version='1.0' encoding=\"utf-8\"?>\n<env:Envelope xmlns:env=\"http://www.w3.org/2003/05/soap-envelope\">\n    <env:Body>\n        <m:cssvalidationresponse\n            env:encodingStyle=\"http://www.w3.org/2003/05/soap-encoding\"\n            xmlns:m=\"http://www.w3.org/2005/07/css-validator\">\n            <m:uri>TextArea</m:uri>\n            <m:checkedby>http://jigsaw.w3.org/css-validator/</m:checkedby>\n            <m:csslevel>css3</m:csslevel>\n            <m:date>2016-03-19T11:28:44Z</m:date>\n            <m:validity>true</m:validity>\n            <m:result>\n                <m:errors xml:lang=\"en\">\n                    <m:errorcount>0</m:errorcount>\n    \n                </m:errors>\n                <m:warnings xml:lang=\"en\">\n                    <m:warningcount>0</m:warningcount>\n                </m:warnings>\n            </m:result>\n        </m:cssvalidationresponse>\n    </env:Body>\n</env:Envelope>\n\n"
  }
}