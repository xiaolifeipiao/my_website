{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport store from 'store';\nimport { isObject, isArray } from 'util';\nimport { Random } from 'mockjs';\nimport { getWindowWidthHeight } from '../helper';\nimport { DEFAULT_PAGE_SIZE, PARAMS_ERROR } from '../constant';\n\nrequire('@root/config');\n\nexport var globalSelf = function () {\n  return true ? window : global;\n}();\n/**\r\n * 生成一定长度的数组\r\n * @param {number} [num=0]\r\n */\n\nexport var generateNumList = function generateNumList() {\n  var num = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return _toConsumableArray(Array(num).keys());\n};\n/**\r\n * 滚动到具体位置\r\n * @param {number} [scrollHeight=getWindowWidthHeight().height]\r\n */\n\nexport var scrollToFixedLocate = function scrollToFixedLocate() {\n  var scrollHeight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getWindowWidthHeight().height;\n  window.scrollTo({\n    top: scrollHeight,\n    behavior: 'smooth'\n  });\n};\nexport var isValidArray = function isValidArray(data) {\n  return isArray(data) && Boolean(data.length);\n};\nexport var getStorage = function getStorage(key) {\n  var isDefaultEmptyObject = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var storeData = IS_CLIENT ? store.get(key) : {};\n  return storeData || (isDefaultEmptyObject ? {} : void 0);\n};\nexport var setStorage = function setStorage(key, value) {\n  var isReassign = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (isObject(value)) {\n    value['timestamp'] = +new Date();\n\n    if (!isReassign) {\n      var oldStoreData = getStorage(key);\n      value = _objectSpread({}, oldStoreData, {}, value);\n    }\n  }\n\n  store.set(key, value);\n};\n\n/**\r\n * 查找集合索引\r\n * @template T\r\n * @param {TFindDataIndexProps<T>} {\r\n *   data = [],\r\n *   target,\r\n *   key,\r\n * }\r\n */\nexport var findDataIndex = function findDataIndex(_ref) {\n  var _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      target = _ref.target,\n      key = _ref.key;\n  return data.findIndex(function (item) {\n    return Object.is(isObject(item) ? item[key] : item, target);\n  });\n};\n/**\r\n * 获取样式\r\n * @param {*} ele\r\n * @returns {CSSStyleDeclaration}\r\n */\n\nexport var getStyle = function getStyle(ele) {\n  if (window.getComputedStyle) {\n    return window.getComputedStyle(ele, null);\n  }\n\n  return ele.currentStyle;\n};\n\n/**\r\n * 对数据进行分页\r\n * @param {*} [query={}]\r\n * @param {*} [data=[]]\r\n * @returns\r\n */\nexport var willDataDoPagination = function willDataDoPagination() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref2$query = _ref2.query,\n      query = _ref2$query === void 0 ? {} : _ref2$query,\n      _ref2$data = _ref2.data,\n      data = _ref2$data === void 0 ? [] : _ref2$data;\n\n  var _query$pageIndex = query.pageIndex,\n      pIndex = _query$pageIndex === void 0 ? 1 : _query$pageIndex,\n      _query$pageSize = query.pageSize,\n      pSize = _query$pageSize === void 0 ? DEFAULT_PAGE_SIZE : _query$pageSize;\n  var pageIndex = Math.floor(pIndex);\n  var pageSize = Math.floor(pSize);\n  var totalCount = data.length;\n  data = isArray(data) ? data : [];\n\n  try {\n    if (isNaN(pageIndex) || isNaN(pageSize)) {\n      throw new Error(PARAMS_ERROR);\n    }\n  } catch (error) {\n    return {\n      data: [],\n      totalCount: totalCount,\n      pageTotal: 0,\n      pageSize: DEFAULT_PAGE_SIZE,\n      pageIndex: 1,\n      hasPrevPage: false,\n      hasNextPage: false,\n      error: error\n    };\n  }\n\n  var limitData = [];\n  var totalPage = Math.ceil(totalCount / pageSize);\n  var hasNextPage = pageIndex < totalPage;\n\n  if (hasNextPage || Object.is(pageIndex, totalPage)) {\n    var sliceIndex = (pageIndex - 1) * pageSize;\n    limitData = data.slice(sliceIndex, pageSize * pageIndex);\n  }\n\n  var hasLength = Boolean(totalCount);\n  return {\n    data: limitData,\n    totalCount: totalCount,\n    pageTotal: totalPage,\n    pageSize: pageSize,\n    pageIndex: pageIndex,\n    hasPrevPage: hasLength && pageIndex > 1,\n    hasNextPage: hasLength && hasNextPage\n  };\n};\nexport var paginationAfterData = function paginationAfterData(options) {\n  return new Promise(function (resolve, reject) {\n    var info = willDataDoPagination(options);\n    return info.error ? reject(info.error) : resolve(info);\n  });\n};\nexport var createImage = function createImage() {\n  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _option$width = option.width,\n      width = _option$width === void 0 ? 100 : _option$width,\n      _option$height = option.height,\n      height = _option$height === void 0 ? 200 : _option$height,\n      _option$bgColor = option.bgColor,\n      bgColor = _option$bgColor === void 0 ? Random.color() : _option$bgColor,\n      _option$text = option.text,\n      text = _option$text === void 0 ? Random.word(1) : _option$text;\n  return Random.image(\"\".concat(width, \"x\").concat(height), bgColor, '#fff', text);\n};","map":null,"metadata":{},"sourceType":"module"}