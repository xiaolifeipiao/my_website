{"ast":null,"code":"import { useRef, useEffect, useState } from 'react';\nexport function useEventListener(eventName, handler, element = IS_CLIENT ? window : null) {\n  const savedHandler = useRef(handler);\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n  useEffect(() => {\n    if (!element || !element.addEventListener) return;\n\n    const eventListener = event => savedHandler.current(event);\n\n    element.addEventListener(eventName, eventListener);\n    return () => {\n      element.removeEventListener(eventName, eventListener);\n    };\n  }, [eventName, element]);\n}\nexport const useIsVisible = (initStatus = false) => {\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(initStatus);\n\n  const toggle = (status = true) => {\n    setVisible(status);\n  };\n\n  return {\n    isShow: visible,\n    showContent: () => toggle(),\n    hideContent: () => toggle(false),\n    toggleContent: () => toggle(!visible)\n  };\n};\nexport function usePrevious(value) {\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n} //ref: https://stackoverflow.com/a/60458593\n\nexport const useProgressiveImage = (src = '') => {\n  const {\n    0: sourceLoaded,\n    1: setSourceLoaded\n  } = useState('');\n  useEffect(() => {\n    if (!src) return;\n    const img = new Image();\n    img.src = src;\n\n    img.onload = () => setSourceLoaded(src);\n\n    img.onerror = () => {};\n  }, [src]);\n  return sourceLoaded;\n};","map":{"version":3,"sources":["C:/Users/19215/Desktop/mywebsite/src/components/hooks/index.ts"],"names":["useRef","useEffect","useState","useEventListener","eventName","handler","element","IS_CLIENT","window","savedHandler","current","addEventListener","eventListener","event","removeEventListener","useIsVisible","initStatus","visible","setVisible","toggle","status","isShow","showContent","hideContent","toggleContent","usePrevious","value","ref","useProgressiveImage","src","sourceLoaded","setSourceLoaded","img","Image","onload","onerror"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,OAAO,SAASC,gBAAT,CACLC,SADK,EAELC,OAFK,EAGLC,OAAgC,GAAGC,SAAS,GAAGC,MAAH,GAAY,IAHnD,EAIC;AACN,QAAMC,YAAY,GAAGT,MAAM,CAACK,OAAD,CAA3B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,YAAY,CAACC,OAAb,GAAuBL,OAAvB;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,OAAD,IAAY,CAACA,OAAO,CAACK,gBAAzB,EAA2C;;AAC3C,UAAMC,aAAa,GAAIC,KAAD,IAAWJ,YAAY,CAACC,OAAb,CAAqBG,KAArB,CAAjC;;AACAP,IAAAA,OAAO,CAACK,gBAAR,CAAyBP,SAAzB,EAAoCQ,aAApC;AACA,WAAO,MAAM;AACXN,MAAAA,OAAO,CAACQ,mBAAR,CAA4BV,SAA5B,EAAuCQ,aAAvC;AACD,KAFD;AAGD,GAPQ,EAON,CAACR,SAAD,EAAYE,OAAZ,CAPM,CAAT;AAQD;AASD,OAAO,MAAMS,YAAY,GAAG,CAC1BC,UAAmB,GAAG,KADI,KAEF;AACxB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBhB,QAAQ,CAACc,UAAD,CAAtC;;AACA,QAAMG,MAAM,GAAG,CAACC,MAAe,GAAG,IAAnB,KAA4B;AACzCF,IAAAA,UAAU,CAACE,MAAD,CAAV;AACD,GAFD;;AAGA,SAAO;AACLC,IAAAA,MAAM,EAAEJ,OADH;AAELK,IAAAA,WAAW,EAAE,MAAMH,MAAM,EAFpB;AAGLI,IAAAA,WAAW,EAAE,MAAMJ,MAAM,CAAC,KAAD,CAHpB;AAILK,IAAAA,aAAa,EAAE,MAAML,MAAM,CAAC,CAACF,OAAF;AAJtB,GAAP;AAMD,CAbM;AAgBP,OAAO,SAASQ,WAAT,CAAqBC,KAArB,EAA4B;AACjC,QAAMC,GAAG,GAAG3B,MAAM,CAAC,IAAD,CAAlB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,GAAG,CAACjB,OAAJ,GAAcgB,KAAd;AACD,GAFQ,CAAT;AAGA,SAAOC,GAAG,CAACjB,OAAX;AACD,C,CAED;;AACA,OAAO,MAAMkB,mBAAmB,GAAG,CAACC,GAAW,GAAG,EAAf,KAAsB;AACvD,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkC7B,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAC4B,GAAL,EAAU;AACV,UAAMG,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,IAAAA,GAAG,CAACH,GAAJ,GAAUA,GAAV;;AACAG,IAAAA,GAAG,CAACE,MAAJ,GAAa,MAAMH,eAAe,CAACF,GAAD,CAAlC;;AACAG,IAAAA,GAAG,CAACG,OAAJ,GAAc,MAAM,CAAE,CAAtB;AACD,GANQ,EAMN,CAACN,GAAD,CANM,CAAT;AAQA,SAAOC,YAAP;AACD,CAZM","sourcesContent":["import { useRef, useEffect, useState } from 'react'\r\n\r\nexport function useEventListener<K extends keyof WindowEventMap>(\r\n  eventName: K,\r\n  handler: (ev: Event) => void,\r\n  element: Window | Element | null = IS_CLIENT ? window : null\r\n): void {\r\n  const savedHandler = useRef(handler)\r\n  useEffect(() => {\r\n    savedHandler.current = handler\r\n  }, [handler])\r\n\r\n  useEffect(() => {\r\n    if (!element || !element.addEventListener) return\r\n    const eventListener = (event) => savedHandler.current(event)\r\n    element.addEventListener(eventName, eventListener)\r\n    return () => {\r\n      element.removeEventListener(eventName, eventListener)\r\n    }\r\n  }, [eventName, element])\r\n}\r\n\r\nexport interface IIsVisibleEmitProps {\r\n  isShow: boolean\r\n  showContent: () => void\r\n  hideContent: () => void\r\n  toggleContent: () => void\r\n}\r\n\r\nexport const useIsVisible = (\r\n  initStatus: boolean = false\r\n): IIsVisibleEmitProps => {\r\n  const [visible, setVisible] = useState(initStatus)\r\n  const toggle = (status: boolean = true) => {\r\n    setVisible(status)\r\n  }\r\n  return {\r\n    isShow: visible,\r\n    showContent: () => toggle(),\r\n    hideContent: () => toggle(false),\r\n    toggleContent: () => toggle(!visible),\r\n  }\r\n}\r\n\r\nexport function usePrevious<T = undefined>(value: T): T\r\nexport function usePrevious(value) {\r\n  const ref = useRef(null)\r\n  useEffect(() => {\r\n    ref.current = value\r\n  })\r\n  return ref.current\r\n}\r\n\r\n//ref: https://stackoverflow.com/a/60458593\r\nexport const useProgressiveImage = (src: string = '') => {\r\n  const [sourceLoaded, setSourceLoaded] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (!src) return\r\n    const img = new Image()\r\n    img.src = src\r\n    img.onload = () => setSourceLoaded(src)\r\n    img.onerror = () => {}\r\n  }, [src])\r\n\r\n  return sourceLoaded\r\n}\r\n"]},"metadata":{},"sourceType":"module"}