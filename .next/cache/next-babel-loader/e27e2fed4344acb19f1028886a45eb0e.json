{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useContext } from 'react';\nimport { PageTitle } from '../common';\nimport { CtxStore } from '@components/context';\nexport const LayoutMain = ({\n  pageTitleProps,\n  children,\n  className = '',\n  style\n}) => {\n  const {\n    store\n  } = useContext(CtxStore);\n  const {\n    bodyStyle\n  } = store;\n  return __jsx(\"section\", {\n    style: _objectSpread({\n      marginBottom: -12,\n      paddingBottom: 12\n    }, style, {}, bodyStyle),\n    className: `pos-rel bg-color-light-gray${className ? ` ${className}` : ''}`\n  }, __jsx(PageTitle, pageTitleProps), __jsx(\"div\", {\n    className: \"layout-container\"\n  }, children));\n};","map":null,"metadata":{},"sourceType":"module"}