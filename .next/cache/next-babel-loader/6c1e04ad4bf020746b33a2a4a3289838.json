{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport chromeExtension from './chromeExtension';\nimport iterm2 from './iterm2';\nimport mac from './mac';\nimport jsLib from './jsLib';\n\nconst generateUid = () => Math.random().toString(32).slice(2, 8);\n\nexport const toolInfo = [{\n  title: 'Chrome扩展（需备梯子）',\n  list: chromeExtension\n}, {\n  title: 'iterm2（终端利器）',\n  list: iterm2\n}, {\n  title: 'Mac软件',\n  list: mac\n}, {\n  title: 'js库',\n  list: jsLib\n}].map(item => _objectSpread({\n  id: generateUid()\n}, item));","map":null,"metadata":{},"sourceType":"module"}