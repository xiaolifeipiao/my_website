{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19215\\\\Desktop\\\\liuguanhua.github.io-master\\\\liuguanhua.github.io\\\\src\\\\pages\\\\_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useReducer } from 'react';\nimport { isString } from 'util';\nimport App from 'next/app';\nimport '@styles/sass/global.scss';\nimport 'react-share-components/dist/react-share-components.css';\nimport { CtxStore } from '@components/context';\nimport Layout from '@components/layout';\nconst initialState = {\n  bodyStyle: {}\n};\n\nfunction reducer(state, action) {\n  const {\n    type\n  } = action;\n  if (!isString(type)) return {};\n\n  switch (action.type) {\n    case 'global':\n      return _objectSpread({}, state, {}, action.payload);\n\n    default:\n      console.warn(`方法${action.type}无效`);\n  }\n}\n\nconst CustomApp = (_ref) => {\n  let {\n    Component,\n    pageProps\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"Component\", \"pageProps\"]);\n\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n  return __jsx(CtxStore.Provider, {\n    value: {\n      store: state,\n      dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }))));\n};\n\nCustomApp.getInitialProps = async appContext => {\n  const {\n    Component,\n    ctx\n  } = appContext;\n  const appProps = await App.getInitialProps(appContext);\n  const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n  return _objectSpread({}, appProps, {}, pageProps);\n};\n\nexport default CustomApp;","map":{"version":3,"sources":["C:/Users/19215/Desktop/liuguanhua.github.io-master/liuguanhua.github.io/src/pages/_app.tsx"],"names":["useReducer","isString","App","CtxStore","Layout","initialState","bodyStyle","reducer","state","action","type","payload","console","warn","CustomApp","Component","pageProps","rest","dispatch","store","getInitialProps","appContext","ctx","appProps"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,SAASC,QAAT,QAAyB,MAAzB;AACA,OAAOC,GAAP,MAA2D,UAA3D;AAEA,OAAO,0BAAP;AACA,OAAO,wDAAP;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAArB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAWD,MAAjB;AACA,MAAI,CAACR,QAAQ,CAACS,IAAD,CAAb,EAAqB,OAAO,EAAP;;AACrB,UAAQD,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACE,+BAAYF,KAAZ,MAAsBC,MAAM,CAACE,OAA7B;;AACF;AACEC,MAAAA,OAAO,CAACC,IAAR,CAAc,KAAIJ,MAAM,CAACC,IAAK,IAA9B;AAJJ;AAMD;;AAED,MAAMI,SAAmE,GAAG,UAItE;AAAA,MAJuE;AAC3EC,IAAAA,SAD2E;AAE3EC,IAAAA;AAF2E,GAIvE;AAAA,MADDC,IACC;;AACJ,QAAM;AAAA,OAACT,KAAD;AAAA,OAAQU;AAAR,MAAoBlB,UAAU,CAACO,OAAD,EAAUF,YAAV,CAApC;AACA,SACE,MAAC,QAAD,CAAU,QAAV;AACE,IAAA,KAAK,EAAE;AACLc,MAAAA,KAAK,EAAEX,KADF;AAELU,MAAAA;AAFK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CANF,CADF;AAYD,CAlBD;;AAoBAF,SAAS,CAACM,eAAV,GAA4B,MAAOC,UAAP,IAAsB;AAChD,QAAM;AAAEN,IAAAA,SAAF;AAAaO,IAAAA;AAAb,MAAqBD,UAA3B;AACA,QAAME,QAAQ,GAAG,MAAMrB,GAAG,CAACkB,eAAJ,CAAoBC,UAApB,CAAvB;AACA,QAAML,SAAS,GAAGD,SAAS,CAACK,eAAV,GACd,MAAML,SAAS,CAACK,eAAV,CAA0BE,GAA1B,CADQ,GAEd,EAFJ;AAGA,2BAAYC,QAAZ,MAAyBP,SAAzB;AACD,CAPD;;AASA,eAAeF,SAAf","sourcesContent":["import { useReducer } from 'react'\r\nimport { NextComponentType } from 'next'\r\nimport { isString } from 'util'\r\nimport App, { AppProps, AppContext, AppInitialProps } from 'next/app'\r\n\r\nimport '@styles/sass/global.scss'\r\nimport 'react-share-components/dist/react-share-components.css'\r\n\r\nimport { CtxStore } from '@components/context'\r\n\r\nimport Layout from '@components/layout'\r\n\r\nconst initialState = { bodyStyle: {} }\r\n\r\nfunction reducer(state, action) {\r\n  const { type } = action\r\n  if (!isString(type)) return {}\r\n  switch (action.type) {\r\n    case 'global':\r\n      return { ...state, ...action.payload }\r\n    default:\r\n      console.warn(`方法${action.type}无效`)\r\n  }\r\n}\r\n\r\nconst CustomApp: NextComponentType<AppContext, AppInitialProps, AppProps> = ({\r\n  Component,\r\n  pageProps,\r\n  ...rest\r\n}) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  return (\r\n    <CtxStore.Provider\r\n      value={{\r\n        store: state,\r\n        dispatch,\r\n      }}\r\n    >\r\n      <Layout>\r\n        <Component {...pageProps} />\r\n      </Layout>\r\n    </CtxStore.Provider>\r\n  )\r\n}\r\n\r\nCustomApp.getInitialProps = async (appContext) => {\r\n  const { Component, ctx } = appContext\r\n  const appProps = await App.getInitialProps(appContext)\r\n  const pageProps = Component.getInitialProps\r\n    ? await Component.getInitialProps(ctx)\r\n    : {}\r\n  return { ...appProps, ...pageProps }\r\n}\r\n\r\nexport default CustomApp\r\n"]},"metadata":{},"sourceType":"module"}