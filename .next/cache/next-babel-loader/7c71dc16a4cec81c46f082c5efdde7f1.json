{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport chromeExtension from './chromeExtension';\nimport iterm2 from './iterm2';\nimport mac from './mac';\nimport jsLib from './jsLib';\n\nconst generateUid = () => Math.random().toString(32).slice(2, 8);\n\nexport const toolInfo = [{\n  title: 'Chrome扩展（需备梯子）',\n  list: chromeExtension\n}, {\n  title: 'iterm2（终端利器）',\n  list: iterm2\n}, {\n  title: 'Mac软件',\n  list: mac\n}, {\n  title: 'js库',\n  list: jsLib\n}].map(item => _objectSpread({\n  id: generateUid()\n}, item));","map":{"version":3,"sources":["C:/Users/19215/Desktop/mywebsite/src/store/mock/toolInfo/index.ts"],"names":["chromeExtension","iterm2","mac","jsLib","generateUid","Math","random","toString","slice","toolInfo","title","list","map","item","id"],"mappings":";;;;;;AAEA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,WAAW,GAAG,MAAMC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,KAA3B,CAAiC,CAAjC,EAAoC,CAApC,CAA1B;;AAEA,OAAO,MAAMC,QAIV,GAAG,CACJ;AACEC,EAAAA,KAAK,EAAE,gBADT;AAEEC,EAAAA,IAAI,EAAEX;AAFR,CADI,EAKJ;AACEU,EAAAA,KAAK,EAAE,cADT;AAEEC,EAAAA,IAAI,EAAEV;AAFR,CALI,EASJ;AACES,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,IAAI,EAAET;AAFR,CATI,EAaJ;AACEQ,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,IAAI,EAAER;AAFR,CAbI,EAiBJS,GAjBI,CAiBCC,IAAD;AACJC,EAAAA,EAAE,EAAEV,WAAW;AADX,GAEDS,IAFC,CAjBA,CAJC","sourcesContent":["import { IToolItemProps } from '@scripts/types'\r\n\r\nimport chromeExtension from './chromeExtension'\r\nimport iterm2 from './iterm2'\r\nimport mac from './mac'\r\nimport jsLib from './jsLib'\r\n\r\nconst generateUid = () => Math.random().toString(32).slice(2, 8)\r\n\r\nexport const toolInfo: {\r\n  id: string\r\n  title: string\r\n  list: IToolItemProps[]\r\n}[] = [\r\n  {\r\n    title: 'Chrome扩展（需备梯子）',\r\n    list: chromeExtension,\r\n  },\r\n  {\r\n    title: 'iterm2（终端利器）',\r\n    list: iterm2,\r\n  },\r\n  {\r\n    title: 'Mac软件',\r\n    list: mac,\r\n  },\r\n  {\r\n    title: 'js库',\r\n    list: jsLib,\r\n  },\r\n].map((item) => ({\r\n  id: generateUid(),\r\n  ...item,\r\n}))\r\n"]},"metadata":{},"sourceType":"module"}