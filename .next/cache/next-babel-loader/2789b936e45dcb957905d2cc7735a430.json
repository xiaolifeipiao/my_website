{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useReducer } from 'react';\nimport { isString } from 'util';\nimport App from 'next/app';\nimport '@styles/sass/global.scss';\nimport 'react-share-components/dist/react-share-components.css';\nimport { CtxStore } from '@components/context';\nimport Layout from '@components/layout';\nconst initialState = {\n  bodyStyle: {}\n};\n\nfunction reducer(state, action) {\n  const {\n    type\n  } = action;\n  if (!isString(type)) return {};\n\n  switch (action.type) {\n    case 'global':\n      return _objectSpread({}, state, {}, action.payload);\n\n    default:\n      console.warn(`方法${action.type}无效`);\n  }\n}\n\nconst CustomApp = (_ref) => {\n  let {\n    Component,\n    pageProps\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"Component\", \"pageProps\"]);\n\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n  return __jsx(CtxStore.Provider, {\n    value: {\n      store: state,\n      dispatch\n    }\n  }, __jsx(Layout, null, __jsx(Component, pageProps)));\n};\n\nCustomApp.getInitialProps = async appContext => {\n  const {\n    Component,\n    ctx\n  } = appContext;\n  const appProps = await App.getInitialProps(appContext);\n  const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n  return _objectSpread({}, appProps, {}, pageProps);\n};\n\nexport default CustomApp;","map":null,"metadata":{},"sourceType":"module"}