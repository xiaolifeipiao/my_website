{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\19215\\\\Desktop\\\\my_website\\\\src\\\\components\\\\layout\\\\Menubar.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport classNames from 'classnames';\nimport { SvgIcon } from '@components/common';\nimport { menuData, BLOG } from '@scripts/menus';\n\nvar Menubar = function Menubar() {\n  var _useRouter = useRouter(),\n      pathname = _useRouter.pathname;\n\n  return __jsx(\"nav\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, menuData.map(function (_ref) {\n    var path = _ref.path,\n        title = _ref.title,\n        icon = _ref.icon,\n        enName = _ref.enName,\n        _ref$linksConfig = _ref.linksConfig,\n        linksConfig = _ref$linksConfig === void 0 ? {} : _ref$linksConfig,\n        isHot = _ref.isHot;\n    var isBlog = Object.is(path, BLOG);\n\n    var href = linksConfig.href,\n        isTargetBlank = linksConfig.isTargetBlank,\n        rest = _objectWithoutProperties(linksConfig, [\"href\", \"isTargetBlank\"]);\n\n    var node = __jsx(React.Fragment, null, __jsx(SvgIcon, {\n      className: \"mgr\",\n      width: 1.2,\n      height: 1.2,\n      component: icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }), __jsx(\"span\", {\n      className: \"m-l-xs vam\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, title, __jsx(\"span\", {\n      className: \"m-l-r-xxs\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }\n    }, \"/\"), __jsx(\"small\", {\n      className: \"font-family-niconne font-size-lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }\n    }, enName), isHot && __jsx(\"span\", {\n      className: \"hot pos-rel\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, __jsx(\"em\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 23\n      }\n    }))));\n\n    return __jsx(\"li\", {\n      className: classNames({\n        active: Object.is(pathname, path)\n      }),\n      key: path,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, href ? __jsx(\"a\", _extends({\n      href: href\n    }, isBlog, isTargetBlank && {\n      target: '_blank'\n    }, rest, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }), node) : __jsx(Link, {\n      href: path,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, node)));\n  })));\n};\n\nexport default Menubar;","map":{"version":3,"sources":["C:/Users/19215/Desktop/my_website/src/components/layout/Menubar.tsx"],"names":["React","Link","useRouter","classNames","SvgIcon","menuData","BLOG","Menubar","pathname","map","path","title","icon","enName","linksConfig","isHot","isBlog","Object","is","href","isTargetBlank","rest","node","active","target"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,gBAA/B;;AAIA,IAAMC,OAAgC,GAAG,SAAnCA,OAAmC,GAAM;AAAA,mBACxBL,SAAS,EADe;AAAA,MACrCM,QADqC,cACrCA,QADqC;;AAG7C,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,CAACI,GAAT,CACC,gBAA4D;AAAA,QAAzDC,IAAyD,QAAzDA,IAAyD;AAAA,QAAnDC,KAAmD,QAAnDA,KAAmD;AAAA,QAA5CC,IAA4C,QAA5CA,IAA4C;AAAA,QAAtCC,MAAsC,QAAtCA,MAAsC;AAAA,gCAA9BC,WAA8B;AAAA,QAA9BA,WAA8B,iCAAhB,EAAgB;AAAA,QAAZC,KAAY,QAAZA,KAAY;AAC1D,QAAMC,MAAM,GAAGC,MAAM,CAACC,EAAP,CAAUR,IAAV,EAAgBJ,IAAhB,CAAf;;AAD0D,QAElDa,IAFkD,GAEjBL,WAFiB,CAElDK,IAFkD;AAAA,QAE5CC,aAF4C,GAEjBN,WAFiB,CAE5CM,aAF4C;AAAA,QAE1BC,IAF0B,4BAEjBP,WAFiB;;AAG1D,QAAMQ,IAAI,GACR,4BACE,MAAC,OAAD;AACE,MAAA,SAAS,EAAC,KADZ;AAEE,MAAA,KAAK,EAAE,GAFT;AAGE,MAAA,MAAM,EAAE,GAHV;AAIE,MAAA,SAAS,EAAEV,IAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KADH,EAEE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGE;AAAO,MAAA,SAAS,EAAC,kCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,MADH,CAHF,EAMGE,KAAK,IACJ;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPJ,CAPF,CADF;;AAsBA,WACE;AACE,MAAA,SAAS,EAAEZ,UAAU,CAAC;AACpBoB,QAAAA,MAAM,EAAEN,MAAM,CAACC,EAAP,CAAUV,QAAV,EAAoBE,IAApB;AADY,OAAD,CADvB;AAIE,MAAA,GAAG,EAAEA,IAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGS,IAAI,GACH;AACE,MAAA,IAAI,EAAEA;AADR,OAEOH,MAFP,EAGOI,aAAa,IAAI;AACpBI,MAAAA,MAAM,EAAE;AADY,KAHxB,EAMMH,IANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQGC,IARH,CADG,GAYH,MAAC,IAAD;AAAM,MAAA,IAAI,EAAEZ,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIY,IAAJ,CADF,CAlBJ,CADF;AAyBD,GAnDF,CADH,CADF,CADF;AA2DD,CA9DD;;AAgEA,eAAef,OAAf","sourcesContent":["import React from 'react'\r\nimport Link from 'next/link'\r\nimport { useRouter } from 'next/router'\r\nimport classNames from 'classnames'\r\n\r\nimport { SvgIcon } from '@components/common'\r\n\r\nimport { menuData, BLOG } from '@scripts/menus'\r\n\r\ninterface IMenubarProps {}\r\n\r\nconst Menubar: React.FC<IMenubarProps> = () => {\r\n  const { pathname } = useRouter()\r\n\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        {menuData.map(\r\n          ({ path, title, icon, enName, linksConfig = {}, isHot }) => {\r\n            const isBlog = Object.is(path, BLOG)\r\n            const { href, isTargetBlank, ...rest } = linksConfig\r\n            const node = (\r\n              <>\r\n                <SvgIcon\r\n                  className=\"mgr\"\r\n                  width={1.2}\r\n                  height={1.2}\r\n                  component={icon}\r\n                />\r\n                <span className=\"m-l-xs vam\">\r\n                  {title}\r\n                  <span className=\"m-l-r-xxs\">/</span>\r\n                  <small className=\"font-family-niconne font-size-lg\">\r\n                    {enName}\r\n                  </small>\r\n                  {isHot && (\r\n                    <span className=\"hot pos-rel\">\r\n                      <em />\r\n                    </span>\r\n                  )}\r\n                </span>\r\n              </>\r\n            )\r\n            return (\r\n              <li\r\n                className={classNames({\r\n                  active: Object.is(pathname, path),\r\n                })}\r\n                key={path}\r\n              >\r\n                {href ? (\r\n                  <a\r\n                    href={href}\r\n                    {...(isBlog )}\r\n                    {...(isTargetBlank && {\r\n                      target: '_blank',\r\n                    })}\r\n                    {...rest}\r\n                  >\r\n                    {node}\r\n                  </a>\r\n                ) : (\r\n                  <Link href={path}>\r\n                    <a>{node}</a>\r\n                  </Link>\r\n                )}\r\n              </li>\r\n            )\r\n          }\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Menubar\r\n"]},"metadata":{},"sourceType":"module"}